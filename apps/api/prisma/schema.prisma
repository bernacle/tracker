generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  id                      Int     @id @default(autoincrement())
  name                    String
  isoCode                 String  @unique @map("iso_code")
  continent               String?
  population              Int?
  populationDensity       Float?  @map("population_density")
  medianAge               Float?  @map("median_age")
  aged65Older             Float?  @map("aged_65_older")
  aged70Older             Float?  @map("aged_70_older")
  gdpPerCapita            Float?  @map("gdp_per_capita")
  extremePoverty          Float?  @map("extreme_poverty")
  cardiovascDeathRate     Float?  @map("cardiovasc_death_rate")
  diabetesPrevalence      Float?  @map("diabetes_prevalence")
  femaleSmokers           Float?  @map("female_smokers")
  maleSmokers             Float?  @map("male_smokers")
  handwashingFacilities   Float?  @map("handwashing_facilities")
  hospitalBedsPerThousand Float?  @map("hospital_beds_per_thousand")
  lifeExpectancy          Float?  @map("life_expectancy")
  humanDevelopmentIndex   Float?  @map("human_development_index")

  covidCases                 CovidCase[]
  vaccinations               Vaccination[]
  vaccinationsByAge          VaccinationByAge[]
  vaccinationsByManufacturer VaccinationByManufacturer[]

  @@map("countries")
}

model CovidCase {
  id          Int      @id @default(autoincrement())
  date        DateTime
  newCases    Int?     @map("new_cases")
  totalCases  Int?     @map("total_cases")
  newDeaths   Int?     @map("new_deaths")
  totalDeaths Int?     @map("total_deaths")

  countryId Int     @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("covid_cases")
}

model Vaccination {
  id                    Int      @id @default(autoincrement())
  date                  DateTime
  totalVaccinations     Int?     @map("total_vaccinations")
  peopleVaccinated      Int?     @map("people_vaccinated")
  peopleFullyVaccinated Int?     @map("people_fully_vaccinated")
  totalBoosters         Int?     @map("total_boosters")
  dailyVaccinations     Int?     @map("daily_vaccinations")

  countryId Int     @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("vaccinations")
}

model VaccinationByAge {
  id                              Int      @id @default(autoincrement())
  date                            DateTime
  ageGroup                        String   @map("age_group")
  peopleVaccinatedPerHundred      Float?   @map("people_vaccinated_per_hundred")
  peopleFullyVaccinatedPerHundred Float?   @map("people_fully_vaccinated_per_hundred")
  peopleWithBoosterPerHundred     Float?   @map("people_with_booster_per_hundred")

  countryId Int     @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("vaccinations_by_age")
}

model VaccinationByManufacturer {
  id                Int      @id @default(autoincrement())
  date              DateTime
  vaccine           String
  totalVaccinations Int?     @map("total_vaccinations")

  countryId Int     @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("vaccinations_by_manufacturer")
}
