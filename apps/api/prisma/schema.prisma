generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  passwordHash  String        @map("password_hash")
  createdAt     DateTime      @default(now()) @map("created_at")
  savedSearches SavedSearch[]

  @@map("users")
}

model SavedSearch {
  id       Int    @id @default(autoincrement())
  name     String
  criteria Json

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  @@map("saved_searches")
}

model Country {
  id                      String  @id @default(uuid())
  name                    String  @unique
  isoCode                 String  @unique @map("iso_code")
  continent               String?
  population              Int?
  populationDensity       Float?  @map("population_density")
  medianAge               Float?  @map("median_age")
  aged65Older             Float?  @map("aged_65_older")
  gdpPerCapita            Float?  @map("gdp_per_capita")
  extremePoverty          Float?  @map("extreme_poverty")
  cardiovascDeathRate     Float?  @map("cardiovasc_death_rate")
  diabetesPrevalence      Float?  @map("diabetes_prevalence")
  femaleSmokers           Float?  @map("female_smokers")
  maleSmokers             Float?  @map("male_smokers")
  handwashingFacilities   Float?  @map("handwashing_facilities")
  hospitalBedsPerThousand Float?  @map("hospital_beds_per_thousand")
  humanDevelopmentIndex   Float?  @map("human_development_index")
  incomeGroup             String? @map("income_group")

  covidCases                 CovidCase[]
  vaccinations               Vaccination[]
  vaccinationsByAge          VaccinationByAge[]
  vaccinationsByManufacturer VaccinationByManufacturer[]
  livesExpectancy            LifeExpectancy[]

  @@index([name])
  @@map("countries")
}

model CovidCase {
  id          String   @id @default(uuid())
  date        DateTime
  newCases    Int?     @map("new_cases")
  totalCases  Int?     @map("total_cases")
  newDeaths   Int?     @map("new_deaths")
  totalDeaths Int?     @map("total_deaths")

  countryId String  @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("covid_cases")
}

model Vaccination {
  id                                                String   @id @default(uuid())
  date                                              DateTime
  totalVaccinations                                 Float?   @map("total_vaccinations")
  peopleVaccinated                                  Float?   @map("people_vaccinated")
  peopleFullyVaccinated                             Float?   @map("people_fully_vaccinated")
  totalBoosters                                     Float?   @map("total_boosters")
  dailyVaccinations                                 Float?   @map("daily_vaccinations")
  dailyVaccinationsSmoothed                         Float?   @map("daily_vaccinations_smoothed")
  dailyPeopleVaccinatedSmoothed                     Float?   @map("daily_people_vaccinated_smoothed")
  totalVaccinationsPerHundred                       Float?   @map("total_vaccinations_per_hundred")
  peopleVaccinatedPerHundred                        Float?   @map("people_vaccinated_per_hundred")
  peopleFullyVaccinatedPerHundred                   Float?   @map("people_fully_vaccinated_per_hundred")
  totalBoostersPerHundred                           Float?   @map("total_boosters_per_hundred")
  dailyPeopleVaccinatedSmoothedPerHundred           Float?   @map("daily_people_vaccinated_smoothed_per_hundred")
  dailyVaccinationsSmoothedPerMillion               Float?   @map("daily_vaccinations_smoothed_per_million")
  peopleUnvaccinated                                Float?   @map("people_unvaccinated")
  shareOfBoosters                                   Float?   @map("share_of_boosters")
  totalVaccinationsInterpolated                     Float?   @map("total_vaccinations_interpolated")
  peopleVaccinatedInterpolated                      Float?   @map("people_vaccinated_interpolated")
  peopleFullyVaccinatedInterpolated                 Float?   @map("people_fully_vaccinated_interpolated")
  totalBoostersInterpolated                         Float?   @map("total_boosters_interpolated")
  totalVaccinationsNoBoostersInterpolated           Float?   @map("total_vaccinations_no_boosters_interpolated")
  totalVaccinationsNoBoostersPerHundredInterpolated Float?   @map("total_vaccinations_no_boosters_per_hundred_interpolated")
  rollingVaccinations6m                             Float?   @map("rolling_vaccinations_6m")
  rollingVaccinations6mPerHundred                   Float?   @map("rolling_vaccinations_6m_per_hundred")
  rollingVaccinations9m                             Float?   @map("rolling_vaccinations_9m")
  rollingVaccinations9mPerHundred                   Float?   @map("rolling_vaccinations_9m_per_hundred")
  rollingVaccinations12m                            Float?   @map("rolling_vaccinations_12m")
  rollingVaccinations12mPerHundred                  Float?   @map("rolling_vaccinations_12m_per_hundred")

  countryId String  @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("vaccinations")
}

model VaccinationByAge {
  id                              String   @id @default(uuid())
  date                            DateTime
  ageGroup                        String   @map("age_group")
  peopleVaccinatedPerHundred      Float?   @map("people_vaccinated_per_hundred")
  peopleFullyVaccinatedPerHundred Float?   @map("people_fully_vaccinated_per_hundred")
  peopleWithBoosterPerHundred     Float?   @map("people_with_booster_per_hundred")

  countryId String  @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("vaccinations_by_age")
}

model VaccinationByManufacturer {
  id                String   @id @default(uuid())
  date              DateTime
  vaccine           String
  totalVaccinations Int?     @map("total_vaccinations")

  countryId String  @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("vaccinations_by_manufacturer")
}

model LifeExpectancy {
  id             String @id @default(uuid())
  year           Int
  lifeExpectancy Float

  countryId String  @map("country_id")
  country   Country @relation(fields: [countryId], references: [id])

  @@map("lives_expectancy")
}
